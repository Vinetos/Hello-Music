apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.0'

    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))

        def value = 0

        def runTasks = gradle.startParameter.taskNames
        if ('assemble' in runTasks || 'assembleRelease' in runTasks || 'aR' in runTasks) {
            value = 1;
        }

        def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionPatch = versionProps['VERSION_PATCH'].toInteger() + value
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1

        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()

        versionProps.store(versionPropsFile.newWriter(), null)
        defaultConfig {
            applicationId "fr.vinetos.hellomusic"
            minSdkVersion 14
            // Fix some runtime error by using api 25
            targetSdkVersion 25

            // Semantic Versioning
            versionCode versionNumber
            versionName "${versionMajor}.${versionMinor}.${versionPatch}-build.${versionBuild}"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

            //renderscript support mode is not supported for 21+ with gradle version 2.0
            renderscriptTargetApi 20
            renderscriptSupportModeEnabled true
        }

        applicationVariants.all { variant ->
            variant.outputs.each { output ->
                def fileNaming = "apk/"
                variant.outputs.each { output2 ->
                    def outputFile = output2.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        output.outputFile = new File(getProject().getRootDir(), "${fileNaming}HelloMusic-${versionMajor}.${versionMinor}.${versionPatch}-build.${versionBuild}.apk")
                    }
                }
            }
        }

    } else {
        throw new GradleException("Could not read version.properties!")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25+'
    compile 'com.android.support:recyclerview-v7:25+'
    compile 'com.android.support:cardview-v7:25+'
    compile 'com.android.support:palette-v7:25+'
    compile 'com.android.support:design:25+'
    compile 'com.android.support:percent:25+'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.4'
    compile 'net.steamcrafted:materialiconlib:1.0.3'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.3.0'
    compile 'com.squareup.okhttp:okhttp:2.3.0'
    compile 'com.google.code.gson:gson:2.7'
    compile 'de.Maxr1998:track-selector-lib:1.1'
    compile('com.github.afollestad.material-dialogs:core:0.8.5.3@aar') {
        transitive = true
    }
    compile('com.github.naman14:app-theme-engine:0.5.1@aar') {
        transitive = true
    }
    compile('com.github.afollestad.material-dialogs:commons:0.8.5.3@aar') {
        transitive = true
    }
}
